{
  "name": "pylang2",
  "word": "identifier",
  "rules": {
    "start": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "definition"
          },
          {
            "type": "SYMBOL",
            "name": "struct"
          },
          {
            "type": "SYMBOL",
            "name": "function"
          }
        ]
      }
    },
    "definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "define"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "_operand"
        }
      ]
    },
    "struct": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "struct"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "types",
          "content": {
            "type": "SYMBOL",
            "name": "_struct_types"
          }
        }
      ]
    },
    "_struct_types": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "type"
              }
            ]
          }
        }
      ]
    },
    "function": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "func"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "locals"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "locals",
          "content": {
            "type": "SYMBOL",
            "name": "dec_integer_literal"
          }
        },
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "STRING",
          "value": "args"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "args",
          "content": {
            "type": "SYMBOL",
            "name": "dec_integer_literal"
          }
        },
        {
          "type": "SYMBOL",
          "name": "statements"
        }
      ]
    },
    "statements": {
      "type": "REPEAT1",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "instruction"
          },
          {
            "type": "SYMBOL",
            "name": "label"
          }
        ]
      }
    },
    "instruction": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_nullary_instruction"
            },
            {
              "type": "SYMBOL",
              "name": "_unary_instruction"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "type"
                },
                {
                  "type": "SYMBOL",
                  "name": "_operand"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "_nullary_instruction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "halt"
        },
        {
          "type": "STRING",
          "value": "noop"
        },
        {
          "type": "STRING",
          "value": "add"
        },
        {
          "type": "STRING",
          "value": "sub"
        },
        {
          "type": "STRING",
          "value": "mul"
        },
        {
          "type": "STRING",
          "value": "div"
        },
        {
          "type": "STRING",
          "value": "mod"
        },
        {
          "type": "STRING",
          "value": "pop"
        },
        {
          "type": "STRING",
          "value": "testeq"
        },
        {
          "type": "STRING",
          "value": "testne"
        },
        {
          "type": "STRING",
          "value": "testlt"
        },
        {
          "type": "STRING",
          "value": "testgt"
        },
        {
          "type": "STRING",
          "value": "callvirt"
        },
        {
          "type": "STRING",
          "value": "ret"
        }
      ]
    },
    "_unary_instruction": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "ldconst"
        },
        {
          "type": "STRING",
          "value": "ldlocal"
        },
        {
          "type": "STRING",
          "value": "stlocal"
        },
        {
          "type": "STRING",
          "value": "jmp"
        },
        {
          "type": "STRING",
          "value": "jmpt"
        },
        {
          "type": "STRING",
          "value": "jmpf"
        },
        {
          "type": "STRING",
          "value": "callfunc"
        },
        {
          "type": "STRING",
          "value": "newstruct"
        },
        {
          "type": "STRING",
          "value": "ldfield"
        },
        {
          "type": "STRING",
          "value": "stfield"
        },
        {
          "type": "STRING",
          "value": "newarray"
        },
        {
          "type": "STRING",
          "value": "ldelem"
        },
        {
          "type": "STRING",
          "value": "stelem"
        }
      ]
    },
    "label": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": ":"
        }
      ]
    },
    "_operand": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_literal"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_number_literal"
            },
            {
              "type": "SYMBOL",
              "name": "str_literal"
            }
          ]
        }
      ]
    },
    "_number_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "-"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bin_integer_literal"
            },
            {
              "type": "SYMBOL",
              "name": "dec_integer_literal"
            },
            {
              "type": "SYMBOL",
              "name": "hex_integer_literal"
            },
            {
              "type": "SYMBOL",
              "name": "float_literal"
            }
          ]
        }
      ]
    },
    "bin_integer_literal": {
      "type": "PATTERN",
      "value": "0b[0-1]+"
    },
    "dec_integer_literal": {
      "type": "PATTERN",
      "value": "0|([1-9][0-9]+)"
    },
    "hex_integer_literal": {
      "type": "PATTERN",
      "value": "0x[0-9a-f]+"
    },
    "_int_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bin_integer_literal"
            },
            {
              "type": "SYMBOL",
              "name": "dec_integer_literal"
            },
            {
              "type": "SYMBOL",
              "name": "hex_integer_literal"
            }
          ]
        }
      ]
    },
    "float_literal": {
      "type": "PATTERN",
      "value": "(0|([1-9][0-9]))+\\.[0-9]+"
    },
    "str_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "PATTERN",
          "value": "[^\\n\\r\\f\"]*"
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "i8"
        },
        {
          "type": "STRING",
          "value": "i16"
        },
        {
          "type": "STRING",
          "value": "i32"
        },
        {
          "type": "STRING",
          "value": "i64"
        },
        {
          "type": "STRING",
          "value": "u8"
        },
        {
          "type": "STRING",
          "value": "u16"
        },
        {
          "type": "STRING",
          "value": "u32"
        },
        {
          "type": "STRING",
          "value": "u64"
        },
        {
          "type": "STRING",
          "value": "f32"
        },
        {
          "type": "STRING",
          "value": "f64"
        },
        {
          "type": "STRING",
          "value": "str"
        },
        {
          "type": "STRING",
          "value": "void"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "_newline": {
      "type": "PATTERN",
      "value": "\\n|\\r\\n"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

